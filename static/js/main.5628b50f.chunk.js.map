{"version":3,"sources":["contexts.js","hooks.js","models/Movie.js","components/molecules/MovieCard.js","components/molecules/SpinnerWithLabel.js","pages/Movies.js","utils.js","reducers.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["MoviesContext","createContext","useSearchQuery","onChangeDebouncedQuery","defaultQuery","useState","query","setQuery","searchQuery","setSearchQuery","debouncedSetSearchQuery","useRef","debounce","f","current","useEffect","Movie","data","this","id","imdbID","type","Type","title","Title","poster","Poster","year","Year","getTitle","fetchAll","a","params","mappedParams","s","page","apikey","process","axios","get","Response","Error","Search","map","movie","totalResults","MovieCard","colorMode","useColorMode","bg","shadow","borderRadius","overflow","flexDir","h","src","getPoster","objectFit","w","p","flex","justifyContent","as","size","mb","getYear","alignSelf","getType","MemorizedMovieCard","React","memo","SpinnerWithLabel","children","thickness","speed","emptyColor","color","mr","alignItems","MoviesPage","useContext","movies","isFetching","errorMsg","dispatchMovies","useCallback","payload","qs","parse","window","location","search","infiniteRef","useInfiniteScroll","loading","hasNextPage","length","threshold","onLoadMore","fetchMovies","total","message","py","variant","placeholder","value","onChange","e","target","status","ref","templateColumns","gap","aria-label","icon","TriangleUp","pos","onClick","scrollTo","top","left","behavior","bottom","right","initMoviesContext","moviesReducer","state","parseInt","App","useReducer","moviesState","toggleColorMode","Provider","maxW","my","Movies","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5628b50f.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const MoviesContext = createContext();\n","import { debounce } from \"lodash\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport const useDebouncedFunc = () => {\n  const func = useRef(debounce((f) => f(), 500));\n  return func.current;\n};\n\nexport const useSearchQuery = ({ onChangeDebouncedQuery, defaultQuery }) => {\n  const [query, setQuery] = useState(defaultQuery || \"\");\n  const [searchQuery, setSearchQuery] = useState(defaultQuery || \"\");\n  const debouncedSetSearchQuery = useDebouncedFunc();\n\n  useEffect(() => {\n    debouncedSetSearchQuery(() => {\n      setSearchQuery(query);\n    });\n  }, [query, debouncedSetSearchQuery]);\n\n  useEffect(() => {\n    if (onChangeDebouncedQuery) {\n      onChangeDebouncedQuery(searchQuery);\n    }\n  }, [onChangeDebouncedQuery, searchQuery]);\n\n  return { query, setQuery };\n};\n","import axios from \"axios\";\n\nclass Movie {\n  constructor(data) {\n    this.id = data.imdbID;\n    this.type = data.Type;\n    this.title = data.Title;\n    this.poster = data.Poster;\n    this.year = data.Year;\n  }\n\n  static fetchAll = async ({ params }) => {\n    // http://www.omdbapi.com/#parameters\n    const mappedParams = {\n      s: params.query || \"\",\n      page: params.page || 1,\n      apikey: process.env.REACT_APP_OMDB_API_KEY,\n    };\n\n    const { data } = await axios.get(\"http://www.omdbapi.com\", {\n      params: mappedParams,\n    });\n\n    if (data.Response === \"False\") {\n      throw new Error(data.Error);\n    }\n\n    return [\n      (data.Search || []).map((movie) => new this(movie)),\n      data.totalResults,\n    ];\n  };\n\n  getType() {\n    return this.type;\n  }\n\n  getTitle() {\n    return this.title || \"\";\n  }\n\n  getPoster() {\n    return this.poster !== \"N/A\"\n      ? this.poster\n      : `https://via.placeholder.com/600x900/000000/FFFFFF?text=${this.getTitle()}`;\n  }\n\n  getYear() {\n    return this.year;\n  }\n}\n\nexport default Movie;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Flex,\n  Heading,\n  useColorMode,\n  Image,\n  Text,\n  Badge,\n} from \"@chakra-ui/react\";\n\nimport Movie from \"../../models/Movie\";\n\nconst MovieCard = ({ movie }) => {\n  const { colorMode } = useColorMode();\n  return (\n    <Flex\n      bg={colorMode === \"light\" ? \"gray.100\" : \"gray.900\"}\n      shadow=\"md\"\n      borderRadius=\"sm\"\n      overflow=\"hidden\"\n      flexDir=\"column\"\n    >\n      <Flex h={360}>\n        <Image src={movie.getPoster()} objectFit=\"contain\" w=\"full\" />\n      </Flex>\n      <Flex p={3} flex={1} flexDir=\"column\" justifyContent=\"space-between\">\n        <Heading as=\"h2\" size=\"sm\" mb={2}>\n          {movie.getTitle()}\n        </Heading>\n        <Flex justifyContent=\"space-between\">\n          <Text>{movie.getYear()}</Text>\n          <Badge alignSelf=\"center\">{movie.getType()}</Badge>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.instanceOf(Movie).isRequired,\n};\n\nconst MemorizedMovieCard = React.memo(MovieCard);\nexport default MemorizedMovieCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Flex, Spinner, Text } from \"@chakra-ui/react\";\n\nconst SpinnerWithLabel = ({ children }) => {\n  return (\n    <Flex justifyContent=\"center\">\n      <Spinner\n        thickness={2}\n        speed=\"0.65s\"\n        emptyColor=\"gray.200\"\n        color=\"blue.500\"\n        size=\"lg\"\n        mr={3}\n      />\n      <Flex alignItems=\"center\">\n        <Text>{children}</Text>\n      </Flex>\n    </Flex>\n  );\n};\n\nSpinnerWithLabel.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n\nexport default SpinnerWithLabel;\n","import React, { useCallback, useContext, useEffect } from \"react\";\nimport {\n  Alert,\n  Box,\n  Grid,\n  IconButton,\n  Input,\n  InputGroup,\n  InputRightElement,\n} from \"@chakra-ui/react\";\nimport { SearchIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\n\nimport { MoviesContext } from \"../contexts\";\nimport { useSearchQuery } from \"../hooks\";\nimport useInfiniteScroll from \"react-infinite-scroll-hook\";\nimport Movie from \"../models/Movie\";\nimport MovieCard from \"../components/molecules/MovieCard\";\nimport SpinnerWithLabel from \"../components/molecules/SpinnerWithLabel\";\nimport { getURLParams } from \"../utils\";\n\nconst MoviesPage = () => {\n  const [\n    { data: movies, isFetching, params, totalResults, errorMsg },\n    dispatchMovies,\n  ] = useContext(MoviesContext);\n\n  const { query, setQuery } = useSearchQuery({\n    onChangeDebouncedQuery: useCallback(\n      (searchQuery) => {\n        if (!searchQuery) {\n          dispatchMovies({ type: \"clear\" });\n        } else {\n          dispatchMovies({\n            type: \"setParams\",\n            payload: { query: searchQuery, page: 1 },\n          });\n        }\n      },\n      [dispatchMovies]\n    ),\n    defaultQuery: getURLParams().query || \"\",\n  });\n\n  const infiniteRef = useInfiniteScroll({\n    loading: isFetching,\n    hasNextPage: totalResults > movies.length,\n    threshold: 200,\n    onLoadMore: () => dispatchMovies({ type: \"setNextPage\" }),\n  });\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const [movies, totalResults] = await Movie.fetchAll({ params });\n        dispatchMovies({\n          type: \"add\",\n          payload: {\n            data: movies,\n            total: totalResults,\n          },\n        });\n      } catch (e) {\n        dispatchMovies({ type: \"setError\", payload: e.message });\n      }\n    };\n\n    if (params.query) {\n      fetchMovies();\n    }\n  }, [params, dispatchMovies]);\n\n  return (\n    <>\n      <Box py={4} mb={4}>\n        <InputGroup size=\"lg\" variant=\"filled\">\n          <Input\n            placeholder=\"Search movie by name...\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n          />\n          <InputRightElement children={<SearchIcon color=\"gray.300\" />} />\n        </InputGroup>\n      </Box>\n      {errorMsg && <Alert status=\"info\">{errorMsg}</Alert>}\n      {isFetching && movies.length === 0 && (\n        <SpinnerWithLabel>Searching ...</SpinnerWithLabel>\n      )}\n      <Grid\n        ref={infiniteRef}\n        templateColumns={[\n          \"repeat(1, 1fr)\",\n          \"repeat(2, 1fr)\",\n          \"repeat(3, 1fr)\",\n          \"repeat(4, 1fr)\",\n        ]}\n        gap={5}\n        mb={4}\n      >\n        {movies.map((movie) => (\n          <MovieCard key={movie.id} movie={movie} />\n        ))}\n      </Grid>\n      {isFetching && movies.length > 0 && (\n        <SpinnerWithLabel>Searching ...</SpinnerWithLabel>\n      )}\n      <IconButton\n        aria-label=\"Go up\"\n        icon={<TriangleUpIcon />}\n        size=\"lg\"\n        pos=\"fixed\"\n        onClick={() =>\n          window.scrollTo({\n            top: 0,\n            left: 0,\n            behavior: \"smooth\",\n          })\n        }\n        bottom={6}\n        right={6}\n      />\n    </>\n  );\n};\nexport default MoviesPage;\n","import qs from \"query-string\";\n\nexport const getURLParams = () => {\n  const parsedUrlParams = qs.parse(window.location.search);\n  return parsedUrlParams;\n};\n","export const initMoviesContext = {\n  data: [],\n  isFetching: false,\n  params: {\n    query: \"\",\n    page: 1,\n  },\n  errorMsg: null,\n  totalResults: 0,\n};\n\nexport const moviesReducer = (state, { type, payload }) => {\n  switch (type) {\n    case \"add\":\n      return {\n        ...state,\n        data: [...state.data, ...payload.data],\n        totalResults: parseInt(payload.total, 10),\n        isFetching: false,\n      };\n    case \"setNextPage\":\n      return {\n        ...state,\n        isFetching: true,\n        params: {\n          ...state.params,\n          page: state.params.page + 1,\n        },\n      };\n    case \"setParams\":\n      return {\n        ...initMoviesContext,\n        isFetching: true,\n        params: {\n          ...state.params,\n          ...payload,\n        },\n      };\n    case \"setError\":\n      return {\n        ...state,\n        isFetching: false,\n        errorMsg: payload,\n      };\n    case \"clear\":\n      return initMoviesContext;\n    default:\n      throw new Error(\"Unknown action in Movies reducer\", \"unknown-action\");\n  }\n};\n","import React from \"react\";\nimport {\n  Heading,\n  Container,\n  Flex,\n  Button,\n  useColorMode,\n} from \"@chakra-ui/react\";\n\nimport MoviesPage from \"./pages/Movies\";\nimport { initMoviesContext, moviesReducer } from \"./reducers\";\nimport { MoviesContext } from \"./contexts\";\n\nfunction App() {\n  const [moviesState, dispatchMovies] = React.useReducer(\n    moviesReducer,\n    initMoviesContext\n  );\n\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <MoviesContext.Provider value={[moviesState, dispatchMovies]}>\n      <Container maxW=\"6xl\" my={4}>\n        <Flex justifyContent=\"space-between\">\n          <Heading as=\"h1\" size=\"lg\" mb={4}>\n            OMDb\n          </Heading>\n          <Button onClick={toggleColorMode} size=\"sm\">\n            Toggle {colorMode === \"light\" ? \"Dark\" : \"Light\"}\n          </Button>\n        </Flex>\n        <MoviesPage />\n      </Container>\n    </MoviesContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst config = {\n  initialColorMode: 'light',\n  useSystemColorMode: true,\n};\n\nconst theme = extendTheme({ config });\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}